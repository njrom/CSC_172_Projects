{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs28 \cf0 Nicholas Romano\
 * netID: nromano2\
 * Project 2: URCalculator\
 * classID: 99\

\fs24 \

\fs28  I did not collaborate with anyone on any part of this assignment. I created URCalculator which acts as a scientific calculator with variable storage and even function storage (read extra credit).  The whole project is contained in the single URCalculator.java file, so just compile and run that.\
	 It follows the proper order of operations by converting infix expressions to post fix before evaluating them.  All of the requirements listed in the project assignment have also been met including a few extra additions listed below:
\fs24 \
\

\fs28 Extra Credit: _Functions[]\

\fs24 \
You can both use sin cos and tan functions, but also define your own multivariable functions (up to three variables).  When defining a function each variable added need to be x,y,z In that order specifically (or just _f[x,y] or _f[x] for single or double variable functions).  Functions can have as long of names as you want they just must begin with an underscore.  One simple limitation is that you cannot have two functions evaluated in the same expression, but if you want to evaluate a function in a math expression you can (e.g 253*_f[2,5]^24 - 353 works).}